package com.school.domain.entity;
// Generated Jul 9, 2018 4:05:01 PM by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Users generated by hbm2java
 */

@Entity
@Table(name="users"
    ,catalog="db_school"
)
@DynamicUpdate(value = true)
public class Users  implements java.io.Serializable {


     private Integer userId;
     private Gender gender;
     private Religion religion;
     private Role role;
     private String firstName;
     private String lastName;
     private String email;
     private String userName;
     private String userPassword;
     private String contactNumber;
     private String imagePath;
     private Date registerDate;
     private String presentAddress;
     private String permanentAddress;
     private Date dob;
     private Set<Payment> payments = new HashSet<Payment>(0);
     private Set<Students> studentses = new HashSet<Students>(0);
     private Set<RoutineMaintainer> routineMaintainers = new HashSet<RoutineMaintainer>(0);
     private Set<TeacherClasses> teacherClasseses = new HashSet<TeacherClasses>(0);
     private Set<StudentRecordBs> studentRecordBses = new HashSet<StudentRecordBs>(0);

    public Users() {
    }

	
    public Users(Gender gender, Religion religion, Role role, String firstName, String lastName) {
        this.gender = gender;
        this.religion = religion;
        this.role = role;
        this.firstName = firstName;
        this.lastName = lastName;
    }
    public Users(Gender gender, Religion religion, Role role, String firstName, String lastName, String email, String userName, String userPassword, String contactNumber, String imagePath, Date registerDate, String presentAddress, String permanentAddress, Date dob, Set<Payment> payments, Set<Students> studentses, Set<RoutineMaintainer> routineMaintainers, Set<TeacherClasses> teacherClasseses, Set<StudentRecordBs> studentRecordBses) {
       this.gender = gender;
       this.religion = religion;
       this.role = role;
       this.firstName = firstName;
       this.lastName = lastName;
       this.email = email;
       this.userName = userName;
       this.userPassword = userPassword;
       this.contactNumber = contactNumber;
       this.imagePath = imagePath;
       this.registerDate = registerDate;
       this.presentAddress = presentAddress;
       this.permanentAddress = permanentAddress;
       this.dob = dob;
       this.payments = payments;
       this.studentses = studentses;
       this.routineMaintainers = routineMaintainers;
       this.teacherClasseses = teacherClasseses;
       this.studentRecordBses = studentRecordBses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="user_id", unique=true, nullable=false)
    public Integer getUserId() {
        return this.userId;
    }
    
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="gender_id", nullable=false)
    public Gender getGender() {
        return this.gender;
    }
    
    public void setGender(Gender gender) {
        this.gender = gender;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="religion_id", nullable=false)
    public Religion getReligion() {
        return this.religion;
    }
    
    public void setReligion(Religion religion) {
        this.religion = religion;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="role_id", nullable=false)
    public Role getRole() {
        return this.role;
    }
    
    public void setRole(Role role) {
        this.role = role;
    }

    
    @Column(name="first_name", nullable=false, length=45)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="last_name", nullable=false, length=45)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="email", length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="user_name", length=45)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

    
    @Column(name="user_password", length=45)
    public String getUserPassword() {
        return this.userPassword;
    }
    
    public void setUserPassword(String userPassword) {
        this.userPassword = userPassword;
    }

    
    @Column(name="contact_number", length=45)
    public String getContactNumber() {
        return this.contactNumber;
    }
    
    public void setContactNumber(String contactNumber) {
        this.contactNumber = contactNumber;
    }

    
    @Column(name="image_path", length=45)
    public String getImagePath() {
        return this.imagePath;
    }
    
    public void setImagePath(String imagePath) {
        this.imagePath = imagePath;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="register_date", length=10)
    public Date getRegisterDate() {
        return this.registerDate;
    }
    
    public void setRegisterDate(Date registerDate) {
        this.registerDate = registerDate;
    }

    
    @Column(name="present_address", length=45)
    public String getPresentAddress() {
        return this.presentAddress;
    }
    
    public void setPresentAddress(String presentAddress) {
        this.presentAddress = presentAddress;
    }

    
    @Column(name="permanent_address", length=45)
    public String getPermanentAddress() {
        return this.permanentAddress;
    }
    
    public void setPermanentAddress(String permanentAddress) {
        this.permanentAddress = permanentAddress;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dob", length=10)
    public Date getDob() {
        return this.dob;
    }
    
    public void setDob(Date dob) {
        this.dob = dob;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<Payment> getPayments() {
        return this.payments;
    }
    
    public void setPayments(Set<Payment> payments) {
        this.payments = payments;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<Students> getStudentses() {
        return this.studentses;
    }
    
    public void setStudentses(Set<Students> studentses) {
        this.studentses = studentses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<RoutineMaintainer> getRoutineMaintainers() {
        return this.routineMaintainers;
    }
    
    public void setRoutineMaintainers(Set<RoutineMaintainer> routineMaintainers) {
        this.routineMaintainers = routineMaintainers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<TeacherClasses> getTeacherClasseses() {
        return this.teacherClasseses;
    }
    
    public void setTeacherClasseses(Set<TeacherClasses> teacherClasseses) {
        this.teacherClasseses = teacherClasseses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users", cascade = CascadeType.ALL)
    public Set<StudentRecordBs> getStudentRecordBses() {
        return this.studentRecordBses;
    }
    
    public void setStudentRecordBses(Set<StudentRecordBs> studentRecordBses) {
        this.studentRecordBses = studentRecordBses;
    }

    @Override
    public String toString() {
        return "Users{" + "userId=" + userId + ", gender=" + gender + ", religion=" + religion + ", role=" + role + ", firstName=" + firstName + ", lastName=" + lastName + ", email=" + email + ", userName=" + userName + ", userPassword=" + userPassword + ", contactNumber=" + contactNumber + ", imagePath=" + imagePath + ", registerDate=" + registerDate + ", presentAddress=" + presentAddress + ", permanentAddress=" + permanentAddress + ", dob=" + dob + '}';
    }



    
}


