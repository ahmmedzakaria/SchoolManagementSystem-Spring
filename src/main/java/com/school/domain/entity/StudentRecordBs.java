package com.school.domain.entity;
// Generated Jul 9, 2018 4:05:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StudentRecordBs generated by hbm2java
 */
@Entity
@Table(name="student_record_bs"
    ,catalog="db_school"
)
public class StudentRecordBs  implements java.io.Serializable {


     private Integer recordBsId;
     private Classes classes;
     private Groups groups;
     private Section section;
     private StudentSession studentSession;
     private Users users;
     private int rollNumber;
     private Date recordDate;
     private Set<ProgressReport> progressReports = new HashSet<ProgressReport>(0);
     private Set<Attendance> attendances = new HashSet<Attendance>(0);
     private Set<AttendanceReport> attendanceReports = new HashSet<AttendanceReport>(0);
     private Set<Result> results = new HashSet<Result>(0);
     private Set<StudentPayment> studentPayments = new HashSet<StudentPayment>(0);
     private Set<RoutineMaintainer> routineMaintainers = new HashSet<RoutineMaintainer>(0);

    public StudentRecordBs() {
    }

	
    public StudentRecordBs(Classes classes, Groups groups, Section section, StudentSession studentSession, Users users, int rollNumber, Date recordDate) {
        this.classes = classes;
        this.groups = groups;
        this.section = section;
        this.studentSession = studentSession;
        this.users = users;
        this.rollNumber = rollNumber;
        this.recordDate = recordDate;
    }
    public StudentRecordBs(Classes classes, Groups groups, Section section, StudentSession studentSession, Users users, int rollNumber, Date recordDate, Set<ProgressReport> progressReports, Set<Attendance> attendances, Set<AttendanceReport> attendanceReports, Set<Result> results, Set<StudentPayment> studentPayments, Set<RoutineMaintainer> routineMaintainers) {
       this.classes = classes;
       this.groups = groups;
       this.section = section;
       this.studentSession = studentSession;
       this.users = users;
       this.rollNumber = rollNumber;
       this.recordDate = recordDate;
       this.progressReports = progressReports;
       this.attendances = attendances;
       this.attendanceReports = attendanceReports;
       this.results = results;
       this.studentPayments = studentPayments;
       this.routineMaintainers = routineMaintainers;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="record_bs_id", unique=true, nullable=false)
    public Integer getRecordBsId() {
        return this.recordBsId;
    }
    
    public void setRecordBsId(Integer recordBsId) {
        this.recordBsId = recordBsId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="class_id", nullable=false)
    public Classes getClasses() {
        return this.classes;
    }
    
    public void setClasses(Classes classes) {
        this.classes = classes;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="group_id", nullable=false)
    public Groups getGroups() {
        return this.groups;
    }
    
    public void setGroups(Groups groups) {
        this.groups = groups;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="section_id", nullable=false)
    public Section getSection() {
        return this.section;
    }
    
    public void setSection(Section section) {
        this.section = section;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="session_id", nullable=false)
    public StudentSession getStudentSession() {
        return this.studentSession;
    }
    
    public void setStudentSession(StudentSession studentSession) {
        this.studentSession = studentSession;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    
    @Column(name="roll_number", nullable=false)
    public int getRollNumber() {
        return this.rollNumber;
    }
    
    public void setRollNumber(int rollNumber) {
        this.rollNumber = rollNumber;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="record_date", nullable=false, length=0)
    public Date getRecordDate() {
        return this.recordDate;
    }
    
    public void setRecordDate(Date recordDate) {
        this.recordDate = recordDate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="studentRecordBs")
    public Set<ProgressReport> getProgressReports() {
        return this.progressReports;
    }
    
    public void setProgressReports(Set<ProgressReport> progressReports) {
        this.progressReports = progressReports;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="studentRecordBs")
    public Set<Attendance> getAttendances() {
        return this.attendances;
    }
    
    public void setAttendances(Set<Attendance> attendances) {
        this.attendances = attendances;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="studentRecordBs")
    public Set<AttendanceReport> getAttendanceReports() {
        return this.attendanceReports;
    }
    
    public void setAttendanceReports(Set<AttendanceReport> attendanceReports) {
        this.attendanceReports = attendanceReports;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="studentRecordBs")
    public Set<Result> getResults() {
        return this.results;
    }
    
    public void setResults(Set<Result> results) {
        this.results = results;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="studentRecordBs")
    public Set<StudentPayment> getStudentPayments() {
        return this.studentPayments;
    }
    
    public void setStudentPayments(Set<StudentPayment> studentPayments) {
        this.studentPayments = studentPayments;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="studentRecordBs")
    public Set<RoutineMaintainer> getRoutineMaintainers() {
        return this.routineMaintainers;
    }
    
    public void setRoutineMaintainers(Set<RoutineMaintainer> routineMaintainers) {
        this.routineMaintainers = routineMaintainers;
    }




}


