package com.school.domain;
// Generated Jul 4, 2018 7:25:15 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name="users"
    ,catalog="db_school"
)
public class Users  implements java.io.Serializable {


     private Integer userId;
     private Religion religion;
     private Role role;
     private String FName;
     private String LName;
     private String email;
     private String userName;
     private String userPassword;
     private String contactNumber;
     private String imagePath;
     private Date registerDate;
     private int gender;
     private String presentAddress;
     private String permanentAddress;
     private Set<Attendance> attendances = new HashSet<Attendance>(0);
     private Set<Payment> payments = new HashSet<Payment>(0);
     private Set<Students> studentses = new HashSet<Students>(0);
     private Set<StudentRecordDt> studentRecordDts = new HashSet<StudentRecordDt>(0);
     private Set<RoutineMaintainer> routineMaintainers = new HashSet<RoutineMaintainer>(0);
     private Set<TeacherClasses> teacherClasseses = new HashSet<TeacherClasses>(0);
     private Set<AttendanceReport> attendanceReports = new HashSet<AttendanceReport>(0);

    public Users() {
    }

	
    public Users(Religion religion, Role role, String FName, String LName, String email, String userName, String userPassword, String contactNumber, String imagePath, Date registerDate, int gender, String presentAddress, String permanentAddress) {
        this.religion = religion;
        this.role = role;
        this.FName = FName;
        this.LName = LName;
        this.email = email;
        this.userName = userName;
        this.userPassword = userPassword;
        this.contactNumber = contactNumber;
        this.imagePath = imagePath;
        this.registerDate = registerDate;
        this.gender = gender;
        this.presentAddress = presentAddress;
        this.permanentAddress = permanentAddress;

    }
    public Users(Religion religion, Role role, String FName, String LName, String email, String userName, String userPassword, String contactNumber, String imagePath, Date registerDate, int gender, String presentAddress, String permanentAddress, Date regDate, Set<Attendance> attendances, Set<Payment> payments, Set<Students> studentses, Set<StudentRecordDt> studentRecordDts, Set<RoutineMaintainer> routineMaintainers, Set<TeacherClasses> teacherClasseses, Set<AttendanceReport> attendanceReports) {
       this.religion = religion;
       this.role = role;
       this.FName = FName;
       this.LName = LName;
       this.email = email;
       this.userName = userName;
       this.userPassword = userPassword;
       this.contactNumber = contactNumber;
       this.imagePath = imagePath;
       this.registerDate = registerDate;
       this.gender = gender;
       this.presentAddress = presentAddress;
       this.permanentAddress = permanentAddress;
       this.attendances = attendances;
       this.payments = payments;
       this.studentses = studentses;
       this.studentRecordDts = studentRecordDts;
       this.routineMaintainers = routineMaintainers;
       this.teacherClasseses = teacherClasseses;
       this.attendanceReports = attendanceReports;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="user_id", unique=true, nullable=false)
    public Integer getUserId() {
        return this.userId;
    }
    
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="religion_id", nullable=false)
    public Religion getReligion() {
        return this.religion;
    }
    
    public void setReligion(Religion religion) {
        this.religion = religion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="role_id", nullable=false)
    public Role getRole() {
        return this.role;
    }
    
    public void setRole(Role role) {
        this.role = role;
    }

    
    @Column(name="f_name", nullable=false, length=45)
    public String getFName() {
        return this.FName;
    }
    
    public void setFName(String FName) {
        this.FName = FName;
    }

    
    @Column(name="l_name", nullable=false, length=45)
    public String getLName() {
        return this.LName;
    }
    
    public void setLName(String LName) {
        this.LName = LName;
    }

    
    @Column(name="email", nullable=false, length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="user_name", nullable=false, length=45)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

    
    @Column(name="user_password", nullable=false, length=45)
    public String getUserPassword() {
        return this.userPassword;
    }
    
    public void setUserPassword(String userPassword) {
        this.userPassword = userPassword;
    }

    
    @Column(name="contact_number", nullable=false, length=45)
    public String getContactNumber() {
        return this.contactNumber;
    }
    
    public void setContactNumber(String contactNumber) {
        this.contactNumber = contactNumber;
    }

    
    @Column(name="image_path", nullable=false, length=45)
    public String getImagePath() {
        return this.imagePath;
    }
    
    public void setImagePath(String imagePath) {
        this.imagePath = imagePath;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="register_date", nullable=false, length=0)
    public Date getRegisterDate() {
        return this.registerDate;
    }
    
    public void setRegisterDate(Date registerDate) {
        this.registerDate = registerDate;
    }

    
    @Column(name="gender", nullable=false)
    public int getGender() {
        return this.gender;
    }
    
    public void setGender(int gender) {
        this.gender = gender;
    }

    
    @Column(name="present_address", nullable=false, length=45)
    public String getPresentAddress() {
        return this.presentAddress;
    }
    
    public void setPresentAddress(String presentAddress) {
        this.presentAddress = presentAddress;
    }

    
    @Column(name="permanent_address", nullable=false, length=45)
    public String getPermanentAddress() {
        return this.permanentAddress;
    }
    
    public void setPermanentAddress(String permanentAddress) {
        this.permanentAddress = permanentAddress;
    }


@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<Attendance> getAttendances() {
        return this.attendances;
    }
    
    public void setAttendances(Set<Attendance> attendances) {
        this.attendances = attendances;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<Payment> getPayments() {
        return this.payments;
    }
    
    public void setPayments(Set<Payment> payments) {
        this.payments = payments;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<Students> getStudentses() {
        return this.studentses;
    }
    
    public void setStudentses(Set<Students> studentses) {
        this.studentses = studentses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<StudentRecordDt> getStudentRecordDts() {
        return this.studentRecordDts;
    }
    
    public void setStudentRecordDts(Set<StudentRecordDt> studentRecordDts) {
        this.studentRecordDts = studentRecordDts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<RoutineMaintainer> getRoutineMaintainers() {
        return this.routineMaintainers;
    }
    
    public void setRoutineMaintainers(Set<RoutineMaintainer> routineMaintainers) {
        this.routineMaintainers = routineMaintainers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<TeacherClasses> getTeacherClasseses() {
        return this.teacherClasseses;
    }
    
    public void setTeacherClasseses(Set<TeacherClasses> teacherClasseses) {
        this.teacherClasseses = teacherClasseses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<AttendanceReport> getAttendanceReports() {
        return this.attendanceReports;
    }
    
    public void setAttendanceReports(Set<AttendanceReport> attendanceReports) {
        this.attendanceReports = attendanceReports;
    }




}


