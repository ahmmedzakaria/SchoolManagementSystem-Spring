package com.school.domain;
// Generated Jul 4, 2018 7:25:15 PM by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * TeacherClasses generated by hbm2java
 */
@Entity
@Table(name="teacher_classes"
    ,catalog="db_school"
)
public class TeacherClasses  implements java.io.Serializable {


     private Integer teacherClassesId;
     private Classes classes;
     private Groups groups;
     private Subjects subjects;
     private Users users;

    public TeacherClasses() {
    }

    public TeacherClasses(Classes classes, Groups groups, Subjects subjects, Users users) {
       this.classes = classes;
       this.groups = groups;
       this.subjects = subjects;
       this.users = users;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="teacher_classes_id", unique=true, nullable=false)
    public Integer getTeacherClassesId() {
        return this.teacherClassesId;
    }
    
    public void setTeacherClassesId(Integer teacherClassesId) {
        this.teacherClassesId = teacherClassesId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="class_id", nullable=false)
    public Classes getClasses() {
        return this.classes;
    }
    
    public void setClasses(Classes classes) {
        this.classes = classes;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="group_id", nullable=false)
    public Groups getGroups() {
        return this.groups;
    }
    
    public void setGroups(Groups groups) {
        this.groups = groups;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="subject_id", nullable=false)
    public Subjects getSubjects() {
        return this.subjects;
    }
    
    public void setSubjects(Subjects subjects) {
        this.subjects = subjects;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }




}


